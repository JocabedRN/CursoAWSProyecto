{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ECS + Docker",
    "Metadata": {},
    "Parameters": {
        "keyNamePair": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "keypair para conexion SSH a instancias EC2 del cluster ECS",
            "ConstraintDescription": "Debe existir previamente un archivo keypair"
        },
        "containerPort": {
            "Type": "Number",
            "Description": "puerto de los contenedores",
            "Default": "8080"
        },
        "database": {
            "Type": "String",
            "Description": "nombre de la base de datos",
            "Default": "encuesta"
        },
        "portBD": {
            "Type": "String",
            "Description": "puerto base de datos",
            "Default": "3306"
        },
        "usernameBD": {
            "Type": "String",
            "Description": "usuario conexion a base de datos",
            "NoEcho": true
        },
        "passwordBD": {
            "Type": "String",
            "Description": "password conexion a base de datos",
            "NoEcho": true
        },
        "capacidadDeseadaECS": {
            "Type": "String",
            "Description": "cantidad de EC2 para el cluster ECS",
            "Default": "2"
        },
        "tipoDeInstancia": {
            "Type": "String",
            "Description": "Ingresar el tipo de instancia EC2",
            "Default": "t2.micro"
        },
        "awsregion":{
            "Type":"String",
            "Description":"Region aws",
            "Default":"us-east-1"
        }
    },
    "Mappings": {
        "AWSRegionToAMI": {
            "us-east-1": {
                "AMIID": "ami-eca289fb"
            },
            "us-east-2": {
                "AMIID": "ami-446f3521"
            }
        }
    },
    "Conditions": {},
    "Resources": {
        "encuestaClusterECS": {
            "Type": "AWS::ECS::Cluster"
        },
        "ecsAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": [
                    {
                        "Fn::ImportValue": "infraestructura-subnetPublica1a"
                    },
                    {
                        "Fn::ImportValue" : "infraestructura-subnetPublica1b"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "containerInstances"
                },
                "MinSize": "0",
                "MaxSize": "4",
                "DesiredCapacity": {
                    "Ref": "capacidadDeseadaECS"
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M"
                }
            },
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                }
            }
        },
        "containerInstances": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIID"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Fn::ImportValue": "infraestructura-sgApiECS"
                    }
                ],
                "InstanceType": {
                    "Ref": "tipoDeInstancia"
                },
                "IamInstanceProfile": {
                    "Ref": "instanceProfileEC2"
                },
                "KeyName": {
                    "Ref": "keyNamePair"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "echo ECS_CLUSTER=",
                                {
                                    "Ref": "encuestaClusterECS"
                                },
                                " >> /etc/ecs/ecs.config\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource ecsAutoScalingGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "instanceProfileEC2": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ecsRoleEC2"
                    }
                ]
            }
        },
        "ecsRoleEC2": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "ecr:GetAuthorizationToken",
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ecsServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                        "elasticloadbalancing:DeregisterTargets",
                                        "elasticloadbalancing:Describe*",
                                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                        "elasticloadbalancing:RegisterTargets",
                                        "ec2:Describe*",
                                        "ec2:AuthorizeSecurityGroupIngress"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "apiLoginRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "apiGenericRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "apiLoginPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "apiLoginPolicy",
                "Roles": [
                    {
                        "Ref": "apiLoginRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cognito-idp:AdminInitiateAuth",
                                "cognito-idp:ConfirmForgotPassword",
                                "cognito-idp:GlobalSignOut",
                                "cognito-idp:AdminRespondToAuthChallenge",
                                "cognito-idp:InitiateAuth",
                                "cognito-idp:AdminGetUser"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:cognito-idp:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":*:userpool/*"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "cloudwatchLogsGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            "logsGroup",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "RetentionInDays": 1
            }
        },
        "taskApiLogin": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "TaskRoleArn": {
                    "Ref": "apiLoginRole"
                },
                "Family": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-apiLogin"
                        ]
                    ]
                },
                "ContainerDefinitions": [
                    {
                        "Name": "apiLogin",
                        "Essential": "true",
                        "Image": "registry.hub.docker.com/dockerjok/apilogin:latest",
                        "MemoryReservation": 374,
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "cloudwatchLogsGroup"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "apiLogin"
                            }
                        },
                        "PortMappings": [
                            {
                                "ContainerPort": {
                                    "Ref": "containerPort"
                                },
                                "HostPort": 0
                            }
                        ],
                        "Environment": [
                            {
                                "Name": "userPoolId",
                                "Value": {
                                    "Fn::ImportValue": "cognito-pool-id"
                                }
                            },
                            {
                                "Name": "clientId",
                                "Value": {
                                    "Fn::ImportValue": "cognito-client-angular"
                                }
                            },
                            {
                                "Name":"awsregion",
                                "Value":{
                                    "Ref": "awsregion"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        "taskApiEncuesta": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "TaskRoleArn": {
                    "Ref": "apiGenericRole"
                },
                "Family": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-apiEncuesta"
                        ]
                    ]
                },
                "ContainerDefinitions": [
                    {
                        "Name": "apiEncuesta",
                        "Essential": "true",
                        "Image": "registry.hub.docker.com/dockerjok/apiencuesta:latest",
                        "MemoryReservation": 374,
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "cloudwatchLogsGroup"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "apiEncuesta"
                            }
                        },
                        "PortMappings": [
                            {
                                "ContainerPort": {
                                    "Ref": "containerPort"
                                },
                                "HostPort": 0
                            }
                        ],
                        "Environment": [
                            {
                                "Name": "userPoolId",
                                "Value": {
                                    "Fn::ImportValue": "cognito-pool-id"
                                }
                            },
                            {
                                "Name": "host",
                                "Value": {
                                    "Fn::ImportValue": "basedatos-endpointRDS"
                                }
                            },
                            {
                                "Name": "database",
                                "Value": {
                                    "Ref": "database"
                                }
                            },
                            {
                                "Name": "username",
                                "Value": {
                                    "Ref": "usernameBD"
                                }
                            },
                            {
                                "Name": "password",
                                "Value": {
                                    "Ref": "passwordBD"
                                }
                            },
                            {
                                "Name": "port",
                                "Value": {
                                    "Ref": "portBD"
                                }
                            },
                            {
                                "Name":"awsregion",
                                "Value":{
                                    "Ref": "awsregion"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        "apiLoginService": {
            "Type": "AWS::ECS::Service",
            "DependsOn": [
                "ecsAutoScalingGroup"
            ],
            "Properties": {
                "ServiceName": "srvApiLogin",
                "Cluster": {
                    "Ref": "encuestaClusterECS"
                },
                "DesiredCount": "1",
                "HealthCheckGracePeriodSeconds": 30,
                "LoadBalancers": [
                    {
                        "ContainerName": "apiLogin",
                        "ContainerPort": {
                            "Ref": "containerPort"
                        },
                        "TargetGroupArn": {
                            "Ref": "tgApiLogin"
                        }
                    }
                ],
                "Role": {
                    "Ref": "ecsServiceRole"
                },
                "TaskDefinition": {
                    "Ref": "taskApiLogin"
                }
            }
        },
        "apiEncuestaService": {
            "Type": "AWS::ECS::Service",
            "DependsOn": [
                "ecsAutoScalingGroup"
            ],
            "Properties": {
                "ServiceName": "srvApiEncuesta",
                "Cluster": {
                    "Ref": "encuestaClusterECS"
                },
                "DesiredCount": "1",
                "HealthCheckGracePeriodSeconds": 30,
                "LoadBalancers": [
                    {
                        "ContainerName": "apiEncuesta",
                        "ContainerPort": {
                            "Ref": "containerPort"
                        },
                        "TargetGroupArn": {
                            "Ref": "tgApiEncuesta"
                        }
                    }
                ],
                "Role": {
                    "Ref": "ecsServiceRole"
                },
                "TaskDefinition": {
                    "Ref": "taskApiEncuesta"
                }
            }
        },
        "tgApiLogin": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckPath": "/status/verificar",
                "HealthCheckProtocol": "HTTP",
                "Matcher": {
                    "HttpCode": "200-204"
                },
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "Name": "tgApiLogin",
                "Port": {
                    "Ref": "containerPort"
                },
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 2,
                "VpcId": {
                    "Fn::ImportValue": "infraestructura-idVPC"
                }
            }
        },
        "tgApiEncuesta": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 30,
                "HealthCheckPath": "/status/verificar",
                "HealthCheckProtocol": "HTTP",
                "Matcher": {
                    "HttpCode": "200-204"
                },
                "HealthCheckTimeoutSeconds": 10,
                "HealthyThresholdCount": 2,
                "Name": "tgApiEncuesta",
                "Port": {
                    "Ref": "containerPort"
                },
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 4,
                "VpcId": {
                    "Fn::ImportValue": "infraestructura-idVPC"
                }
            }
        },
        "ecsAlbListenerRuleApiLogin": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "DependsOn": "tgApiLogin",
            "Properties": {
                "Actions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "tgApiLogin"
                        }
                    }
                ],
                "Conditions": [
                    {
                        "Field": "path-pattern",
                        "Values": [
                            "/api/security/*"
                        ]
                    }
                ],
                "ListenerArn": {
                    "Fn::ImportValue": "infraestructura-arnListenerHttpBalancer"
                },
                "Priority": 1
            }
        },
        "ecsAlbListenerRuleApiEncuesta": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "DependsOn": "tgApiEncuesta",
            "Properties": {
                "Actions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "tgApiEncuesta"
                        }
                    }
                ],
                "Conditions": [
                    {
                        "Field": "path-pattern",
                        "Values": [
                            "/api/encuesta/*"
                        ]
                    }
                ],
                "ListenerArn": {
                    "Fn::ImportValue": "infraestructura-arnListenerHttpBalancer"
                },
                "Priority": 4
            }
        },
        "autoscalingRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "application-autoscaling.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "service-autoscaling",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "application-autoscaling:*",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:PutMetricAlarm",
                                        "ecs:DescribeServices",
                                        "ecs:UpdateService"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "scalingTargetApiLogin": {
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
            "DependsOn": [
                "apiLoginService"
            ],
            "Properties": {
                "MaxCapacity": 3,
                "MinCapacity": 1,
                "ResourceId": {
                    "Fn::Join":[
                        "",
                        [
                          "service/",
                          {
                            "Ref":"encuestaClusterECS"
                          },
                          "/srvApiLogin"
                        ]
                      ]
                },
                "RoleARN": {
                    "Fn::GetAtt": [
                        "autoscalingRole",
                        "Arn"
                    ]
                },
                "ScalableDimension": "ecs:service:DesiredCount",
                "ServiceNamespace": "ecs"
            }
        },
        "scalingPolicyApiLogin": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "Properties": {
                "PolicyName": "AStepPolicyApiLogin",
                "PolicyType": "TargetTrackingScaling",
                "ScalingTargetId": {
                    "Ref": "scalingTargetApiLogin"
                },
                "TargetTrackingScalingPolicyConfiguration": {
                    "TargetValue": 85,
                    "ScaleInCooldown": 120,
                    "ScaleOutCooldown": 120,
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
                    }
                }
            }
        }
    },
    "Outputs": {}
}